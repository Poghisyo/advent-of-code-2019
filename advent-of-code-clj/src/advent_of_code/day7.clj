(ns advent-of-code.day7
  (:require [advent-of-code.day5 :as intcode]))

; (comment
;  (let [result 0]
;    (doseq [w (vec (range 0 5))
;            x (vec (range 0 5))
;            y (vec (range 0 5))
;            z (vec (range 0 5))]
;      (let [output 0] ; irl to be output of running combo on intcode prog
;         (if (> output result)
;           (println result))))))

(def input [
            4,8,1001,8,10,8,105,1,1,0,21,42,59,76,85,106,187,268,349,430,99999,3,9,102,3,9,9,1001,9,2,9,1002,9,3,9,1001,9,3,9,4,9,99,3,9,102,3,9,9,101,3,9,9,1002,9,2,9,4,9,99,3,9,102,3,9,9,1001,9,4,9,1002,9,5,9,4,9,99,3,9,102,2,9,9,4,9,99,3,9,101,3,9,9,1002,9,2,9,1001,9,4,9,1002,9,2,9,4,9,99,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,102,2,9,9,4,9,3,9,101,2,9,9,4,9,99,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,101,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,101,2,9,9,4,9,99,3,9,1001,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,102,2,9,9,4,9,3,9,101,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,101,2,9,9,4,9,3,9,101,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,3,9,102,2,9,9,4,9,99,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,99,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,99])

(defn run-amp
  "take setting and input - run intcode - output res"
  [input setting]
  (let [result (intcode/run-intcode input setting)]
    result))

(comment
  (def test-1-input [3,15,3,16,1002,16,10,16,1,16,15,15,4,15,99,0,0])
  (def test-2-input [3,23,3,24,1002,24,10,24,1002,23,-1,23,101,5,23,23,1,24,23,23,4,23,99,0,0])
  (def test-3-input [3,31,3,32,1002,32,10,32,1001,31,-2,31,1007,31,0,33,1002,33,7,33,1,33,31,31,1,32,31,31,4,31,99,0,0,0])
  (def test-1-settings [4,3,2,1,0])
  (def test-1-settings [0,1,2,3,4])
  (def test-1-settings [1,0,4,3,2])
  (let [result (run-amp test-3-input 1)
        res-1 (run-amp result 0)
        res-2 (run-amp res-1 4)
        res-3 (run-amp res-2 3)
        res-4 (run-amp res-3 2)]
   (clojure.pprint/pprint  "x")
   (println res-4)))


(defn -main
  [& args]
  (let [x (advent-of-code.day5/run-intcode [0001 1 1 0 99])]
    (println x)))
